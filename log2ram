#!/usr/bin/env sh
. /etc/log2ram.conf 
HDD_LOG=/var/hdd.log 
RAM_LOG=/var/log 
LOG_NAME="log2ram.log" 
LOG2RAM_LOG="${RAM_LOG}/${LOG_NAME}" 
LOG_OUTPUT="tee -a $LOG2RAM_LOG" 
BIG_CORES=$((BIG_CORES+1))
if modinfo zram | grep -q 'zram_num_devices:' 2>/dev/null; then
  MODPROBE_ARGS="zram_num_devices=${BIG_CORES}" 
elif 
  modinfo zram | grep -q ' num_devices:' 2>/dev/null; then
  MODPROBE_ARGS="num_devices=${BIG_CORES}" 
else
  exit 1 
fi 
modprobe zram $MODPROBE_ARGS
BIG_CORES=$((BIG_CORES-1))
# Calculate memory to use for zram (1/2 of ram)
totalmem=$(free|awk '/^Mem:/{print $2}')
mem=$((( totalmem * MEM_FACTOR / 100 / BIG_CORES ) * 1024))
 
# initialize the devices
for i in $(seq ${BIG_CORES}); do
  DEVNUMBER=$((i - 1))
  echo ${COMP_ALG} > /sys/block/zram${DEVNUMBER}/comp_algorithm
  echo ${mem} > /sys/block/zram${DEVNUMBER}/disksize
  mkswap /dev/zram${DEVNUMBER}
  swapon -p 75 /dev/zram${DEVNUMBER} 
done 

echo ${COMP_ALG} > /sys/block/zram${BIG_CORES}/comp_algorithm 
echo ${SIZE_BYTES} > /sys/block/zram${BIG_CORES}/disksize 
mkfs.ext4 /dev/zram${BIG_CORES}   

isSafe () {
    [ -d $HDD_LOG/ ] || echo "ERROR: $HDD_LOG/ doesn't exist! Can't sync."
    [ -d $HDD_LOG/ ] || exit 1
 }

syncToDisk () {
    isSafe

    if [ "$USE_RSYNC" = true ]; then
        rsync -aXWv --delete --links $RAM_LOG/ $HDD_LOG/ 2>&1 | $LOG_OUTPUT
    else
        cp -rfup $RAM_LOG/ -T $HDD_LOG/ 2>&1 | $LOG_OUTPUT
    fi
 }
syncFromDisk () {
    isSafe
    if [ ! -z "$(du -sh -t "$SIZE" $HDD_LOG/ | cut -f1)" ]; then
        echo "ERROR: RAM disk too small. Can't sync."
        umount -l $RAM_LOG/
        umount -l $HDD_LOG/
        if [ "$MAIL" = true ]; then
            echo "LOG2RAM : No place on RAM anymore, fallback on the disk" | mail -s 'Log2Ram Error' root;
        fi
        exit 1
    fi

    if [ "$USE_RSYNC" = true ]; then
        rsync -aXWv --delete --links $HDD_LOG/ $RAM_LOG/ 2>&1 | $LOG_OUTPUT
    else
        cp -rfup $HDD_LOG/ -T $RAM_LOG/ 2>&1 | $LOG_OUTPUT
    fi
 }
wait_for () {
    while ! grep -qs "$1" /proc/mounts; do
        sleep 0.1
    done
 }
case "$1" in
  start)
      [ -d $HDD_LOG/ ] || mkdir $HDD_LOG/
      mount --bind $RAM_LOG/ $HDD_LOG/
      mount --make-private $HDD_LOG/
      wait_for $HDD_LOG
      mount -t ext4 -o nosuid,noexec,nodev,user=log2ram /dev/zram$BIG_CORES $RAM_LOG/
      wait_for $RAM_LOG
      syncFromDisk
      ;;
  stop)
      syncToDisk
      umount -l $RAM_LOG/
      umount -l $HDD_LOG/
      ;;
  write)
      syncToDisk
      ;;
  *)
      echo "Usage: log2ram {start|stop|write}" >&2
      exit 1
      ;;
esac

